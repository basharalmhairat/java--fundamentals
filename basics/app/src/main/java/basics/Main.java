/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basics;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;
        public class Main {

            public static void main(String[] args) {
                int dogCount = 1;
                System.out.println("I own " + dogCount + " " + pluralize("dog", dogCount) + ".");
                int catCount = 2;
                System.out.println("I own " + catCount + " " + pluralize("cat", catCount) + ".");
                int turtleCount = 0;
                System.out.println("I own " + turtleCount + " " + pluralize("turtle", turtleCount) + ".");
                flipNHeads(2);
                clock();
            }
            public static String pluralize(String animalCount, int num) {

                return num != 1 ? animalCount + "s" : animalCount;
            }
            public static void flipNHeads(int n) {
                Random random = new Random();
                int count = 0;
                int headCount = 0;
                while (headCount < n) {
                    count++;
                    if (random.nextFloat() < 0.5) {
                        headCount = 0;
                        System.out.println("tails");
                    } else {
                        headCount++;
                        System.out.println("heads");
                    }
                }
                System.out.println("It took " + count + " flips to flip " + n + " head in a row.");
            }
            public static void clock() {
                int delay = 0;
                int interval = 1000;
                Timer timer = new Timer();
                String pattern = "HH:mm:ss";
                TimerTask task = new TimerTask() {
                    public void run() {
                        System.out.println(LocalDateTime.now().format(DateTimeFormatter.ofPattern(pattern)));
                    }
                };
                timer.scheduleAtFixedRate(task, delay, interval);
            }
        }


